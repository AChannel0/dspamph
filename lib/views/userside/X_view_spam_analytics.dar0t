import 'package:flutter/material.dart';
import 'package:table_calendar/table_calendar.dart';

class ViewSpamAnalytics extends StatefulWidget {
  final Map<String, int> spamMessageCountByDate;

  const ViewSpamAnalytics({
    Key? key,
    required this.spamMessageCountByDate,
  }) : super(key: key);

  @override
  _ViewSpamAnalyticsState createState() => _ViewSpamAnalyticsState();
}

class _ViewSpamAnalyticsState extends State<ViewSpamAnalytics> {
  CalendarFormat _calendarFormat = CalendarFormat.month;
  DateTime _focusedDay = DateTime.now();
  DateTime? _selectedDay;

  String _formatDate(DateTime date) {
    return "${date.year}-${date.month}-${date.day}";
  }

  @override
  Widget build(BuildContext context) {
    final formattedSelectedDate = _formatDate(_selectedDay ?? DateTime.now());
    final spamCountForSelectedDate =
        widget.spamMessageCountByDate[formattedSelectedDate] ?? 0;

    return Scaffold(
      appBar: AppBar(
        title: const Text('SMS Spam History'),
      ),
      body: Column(
        children: <Widget>[
          TableCalendar(
            calendarFormat: CalendarFormat.month,
            focusedDay: _focusedDay,
            firstDay: DateTime(2023),
            lastDay: DateTime(2024),
            selectedDayPredicate: (day) {
              return isSameDay(_selectedDay, day);
            },
            onDaySelected: (selectedDay, focusedDay) {
              if (!isSameDay(_selectedDay, selectedDay)) {
                setState(() {
                  _selectedDay = selectedDay;
                  _focusedDay = focusedDay;
                });
              }
            },
          ),
          if (_selectedDay != null)
            Text(
              'Spam Count for Selected Date: $spamCountForSelectedDate',
              style: TextStyle(
                fontSize: 18,
                fontWeight: FontWeight.bold,
              ),
            ),
        ],
      ),
    );
  }
}
